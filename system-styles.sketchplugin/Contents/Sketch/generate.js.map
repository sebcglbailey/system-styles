{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/generate.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\""],"names":["docs","Sketch","getDocuments","doc","page","pages","layers","selectedLayers","textLayers","shapeLayers","styleRefs","existingStyles","context","fromNative","document","getSharedTextStyles","UI","message","forEach","layer","type","push","iterateTextLayers","length","addTextLayerWithoutColor","addTextLayerWithColor","iterateStyleNames","textLayer","shape","iterateAlignments","shapeLayer","addStyleRefs","alignment","name","includes","replace","obj","createStyle","textRef","shapeRef","newText","filter","style","SketchDOM","Text","immutableColor","MSImmutableColor","colorWithSVGString_","fills","color","newColor","MSColor","alloc","initWithImmutableObject_","sketchObject","setTextColor","existing","SharedStyle","fromStyle","hexToRgba","hex","result","exec","r","parseInt","g","b","a","MSColorStringToRgba","msColor","red","green","blue","alpha"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA,IAAMA,IAAI,GAAGC,6CAAM,CAACC,YAAP,EAAb;AACA,IAAIC,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAd;AACA,IAAII,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAX;AAEA,IAAIC,MAAM,GAAGH,GAAG,GAAGA,GAAG,CAACI,cAAJ,CAAmBD,MAAtB,GAA+B,IAA/C;AAEA,IAAIE,UAAU,GAAG,EAAjB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,SAAS,GAAG,EAAhB;AAEA,IAAIC,cAAJ,C,CAEA;;AACe,yEAACC,OAAD,EAAa;AAE1BT,KAAG,GAAGF,6CAAM,CAACY,UAAP,CAAkBD,OAAO,CAACE,QAA1B,CAAN;AACAR,QAAM,GAAGH,GAAG,GAAGA,GAAG,CAACI,cAAJ,CAAmBD,MAAtB,GAA+B,IAA3C;AACAK,gBAAc,GAAGR,GAAG,CAACY,mBAAJ,EAAjB;;AAEA,MAAI,CAACT,MAAL,EAAa;AACXL,iDAAM,CAACe,EAAP,CAAUC,OAAV,CAAkB,wBAAlB;AACA;AACD,GATyB,CAW1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,QAAM,CAACY,OAAP,CAAe,UAACC,KAAD,EAAW;AACxB,QAAIA,KAAK,CAACC,IAAN,IAAc,MAAlB,EAA0B;AACxBZ,gBAAU,CAACa,IAAX,CAAgBF,KAAhB;AACD,KAFD,MAEO,IAAIA,KAAK,CAACC,IAAN,IAAc,WAAlB,EAA+B;AACpCX,iBAAW,CAACY,IAAZ,CAAiBF,KAAjB;AACD;AACF,GAND;AAQAG,mBAAiB;AAElB,CAjCD,E,CAmCA;;AACA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAE9B,MAAId,UAAU,CAACe,MAAX,IAAqB,CAAzB,EAA4B;AAC1BtB,iDAAM,CAACe,EAAP,CAAUC,OAAV,CAAkB,8CAAlB;AACA;AACD;;AAED,MAAIR,WAAW,CAACc,MAAZ,IAAsB,CAA1B,EAA6B;AAC3Bf,cAAU,CAACU,OAAX,CAAmB,UAACC,KAAD,EAAW;AAC5BK,8BAAwB,CAACL,KAAD,CAAxB;AACD,KAFD;AAGD,GAJD,MAIO;AACLX,cAAU,CAACU,OAAX,CAAmB,UAACC,KAAD,EAAW;AAC5BM,2BAAqB,CAACN,KAAD,CAArB;AACD,KAFD;AAGD;;AAEDO,mBAAiB;AAElB,CAnBD,C,CAqBA;;;AACA,IAAMD,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACE,SAAD,EAAe;AAC3ClB,aAAW,CAACS,OAAZ,CAAoB,UAACU,KAAD,EAAW;AAC7BC,qBAAiB,CAACF,SAAD,EAAYC,KAAZ,CAAjB;AACD,GAFD;AAGD,CAJD,C,CAMA;;;AACA,IAAMJ,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACG,SAAD,EAAe;AAC9CE,mBAAiB,CAACF,SAAD,CAAjB;AACD,CAFD,C,CAIA;;;AACA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,SAAD,EAAYG,UAAZ,EAA2B;AACnDC,cAAY,CAACJ,SAAD,EAAYG,UAAZ,EAAwB,SAAxB,CAAZ;AACAC,cAAY,CAACJ,SAAD,EAAYG,UAAZ,EAAwB,UAAxB,CAAZ;AACAC,cAAY,CAACJ,SAAD,EAAYG,UAAZ,EAAwB,WAAxB,CAAZ;AACD,CAJD,C,CAMA;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,SAAD,EAAYG,UAAZ,EAAwBE,SAAxB,EAAsC;AACzD,MAAIC,IAAI,GAAGN,SAAS,CAACM,IAArB;AACAA,MAAI,GAAGA,IAAI,CAACC,QAAL,CAAc,SAAd,IAA2BD,IAAI,CAACE,OAAL,CAAa,SAAb,EAAwBH,SAAxB,CAA3B,GAAgEC,IAAI,GAAG,GAAP,GAAaD,SAApF;AACAC,MAAI,GAAGA,IAAI,CAACC,QAAL,CAAc,SAAd,KAA4BJ,UAA5B,GAAyCG,IAAI,CAACE,OAAL,CAAa,SAAb,EAAwBL,UAAU,CAACG,IAAnC,CAAzC,GACGA,IAAI,CAACC,QAAL,CAAc,SAAd,IAA2BD,IAAI,CAACE,OAAL,CAAa,SAAb,EAAwB,SAAxB,CAA3B,GACAL,UAAU,GAAGG,IAAI,GAAG,GAAP,GAAaH,UAAU,CAACG,IAA3B,GACVA,IAHV;AAIAvB,WAAS,CAACW,IAAV,CAAe;AACbM,aAAS,EAAEA,SADE;AAEbG,cAAU,EAAEA,UAFC;AAGbG,QAAI,EAAEA;AAHO,GAAf;AAKD,CAZD,C,CAcA;;;AACA,IAAMP,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BhB,WAAS,CAACQ,OAAV,CAAkB,UAACkB,GAAD,EAAS;AACzBC,eAAW,CAACD,GAAG,CAACH,IAAL,EAAWG,GAAG,CAACT,SAAf,EAA0BS,GAAG,CAACN,UAA9B,CAAX;AACD,GAFD;AAGD,CAJD,C,CAMA;;;AACA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACJ,IAAD,EAAOK,OAAP,EAAgBC,QAAhB,EAA6B;AAE/C,MAAIC,OAAO,GAAGpC,IAAI,CAACE,MAAL,CAAYmC,MAAZ,CAAmB,UAACtB,KAAD,EAAW;AAC1C,WAAOA,KAAK,CAACc,IAAN,IAAcA,IAArB;AACD,GAFa,EAEX,CAFW,CAAd;;AAIA,MAAIO,OAAJ,EAAa;AACXA,WAAO,CAACE,KAAR,GAAgBJ,OAAO,CAACI,KAAxB;AACD,GAFD,MAEO;AACLF,WAAO,GAAG,IAAIG,iDAAS,CAACC,IAAd,CAAmB;AAC3B;AACA;AACAX,UAAI,EAAEA,IAHqB;AAI3BS,WAAK,EAAEJ,OAAO,CAACI,KAJY,CAK3B;AACE;AACA;AACF;;AAR2B,KAAnB,CAAV;AAUD;;AAED,MAAIT,IAAI,CAACC,QAAL,CAAc,SAAd,CAAJ,EAA8B;AAC5BM,WAAO,CAACR,SAAR,GAAoB,MAApB;AACD,GAFD,MAEO,IAAIC,IAAI,CAACC,QAAL,CAAc,UAAd,CAAJ,EAA+B;AACpCM,WAAO,CAACR,SAAR,GAAoB,OAApB;AACD,GAFM,MAEA,IAAIC,IAAI,CAACC,QAAL,CAAc,WAAd,CAAJ,EAAgC;AACrCM,WAAO,CAACR,SAAR,GAAoB,QAApB;AACD,GA3B8C,CA6B/C;AACA;AAEA;;;AAEA,MAAIa,cAAc,GAAGC,gBAAgB,CAACC,mBAAjB,CAAqCR,QAAQ,CAACG,KAAT,CAAeM,KAAf,CAAqB,CAArB,EAAwBC,KAA7D,CAArB;AACA,MAAIC,QAAQ,GAAGC,OAAO,CAACC,KAAR,GAAgBC,wBAAhB,CAAyCR,cAAzC,CAAf;AAEAL,SAAO,CAACc,YAAR,CAAqBC,YAArB,CAAkCL,QAAlC;AAEA,MAAIM,QAAQ,GAAG7C,cAAc,CAAC8B,MAAf,CAAsB,UAACC,KAAD,EAAW;AAC9C,WAAOA,KAAK,CAACT,IAAN,IAAcA,IAArB;AACD,GAFc,EAEZ,CAFY,CAAf;;AAIA,MAAIuB,QAAJ,EAAc;AACZA,YAAQ,CAACd,KAAT,GAAiBF,OAAO,CAACE,KAAzB;AACD,GAFD,MAEO;AACLc,YAAQ,GAAGb,iDAAS,CAACc,WAAV,CAAsBC,SAAtB,CAAgC;AACzCzB,UAAI,EAAEA,IADmC;AAEzCS,WAAK,EAAEF,OAAO,CAACE,KAF0B;AAGzC5B,cAAQ,EAAEX;AAH+B,KAAhC,CAAX;AAKD;AAEF,CArDD,C,CAuDA;;;AACA,IAAMwD,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AAC1B,MAAIA,GAAJ,EAAS;AACL,QAAIC,MAAM,GAAG,wDAAwDC,IAAxD,CAA6DF,GAA7D,CAAb;AACA,WAAOC,MAAM,GAAG;AACZE,OAAC,EAAEC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,GAAwB,GADf;AAEZI,OAAC,EAAED,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,GAAwB,GAFf;AAGZK,OAAC,EAAEF,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,GAAwB,GAHf;AAIZM,OAAC,EAAEH,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,GAAwB;AAJf,KAAH,GAKT,IALJ;AAMH;AACD,CAVD,C,CAYA;;;AACA,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAa;AACxC,MAAIA,OAAJ,EAAa;AACT,WAAO;AACHN,OAAC,EAAEM,OAAO,CAACC,GAAR,EADA;AAEHL,OAAC,EAAEI,OAAO,CAACE,KAAR,EAFA;AAGHL,OAAC,EAAEG,OAAO,CAACG,IAAR,EAHA;AAIHL,OAAC,EAAEE,OAAO,CAACI,KAAR;AAJA,KAAP;AAMH;AACD,CATD,C;;;;;;;;;;;ACxLA,mC;;;;;;;;;;;ACAA,uC","file":"generate.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/generate.js\");\n","import Sketch from 'sketch';\n\nimport SketchDOM from 'sketch/dom';\nconst docs = Sketch.getDocuments()\nlet doc = docs[0]\nlet page = doc.pages[0]\n\nlet layers = doc ? doc.selectedLayers.layers : null\n\nlet textLayers = []\nlet shapeLayers = []\nlet styleRefs = []\n\nlet existingStyles;\n\n// Function to run on running the plugin\nexport default (context) => {\n\n  doc = Sketch.fromNative(context.document)\n  layers = doc ? doc.selectedLayers.layers : null\n  existingStyles = doc.getSharedTextStyles()\n\n  if (!layers) {\n    Sketch.UI.message(\"Nothing selected 🤦‍♀️\")\n    return\n  }\n\n  // page = doc.pages.filter((page) => {\n  //   return page.name == \"Generated Styles\"\n  // })\n  // if (page.length == 0) {\n  //   page = new SketchDOM.Page({\n  //     parent: doc,\n  //     name: \"Generated Styles\"\n  //   })\n  // } else {\n  //   page = page[0]\n  // }\n\n  layers.forEach((layer) => {\n    if (layer.type == \"Text\") {\n      textLayers.push(layer)\n    } else if (layer.type == \"ShapePath\") {\n      shapeLayers.push(layer)\n    }\n  })\n\n  iterateTextLayers()\n  \n}\n\n// Iterate over the selected text layers\nconst iterateTextLayers = () => {\n\n  if (textLayers.length == 0) {\n    Sketch.UI.message(\"Please select at least one text layer 🕵️‍♂️\")\n    return\n  }\n\n  if (shapeLayers.length == 0) {\n    textLayers.forEach((layer) => {\n      addTextLayerWithoutColor(layer)\n    })\n  } else {\n    textLayers.forEach((layer) => {\n      addTextLayerWithColor(layer)\n    })\n  }\n\n  iterateStyleNames()\n\n}\n\n// Add a style name if there are shape layers selected\nconst addTextLayerWithColor = (textLayer) => {\n  shapeLayers.forEach((shape) => {\n    iterateAlignments(textLayer, shape)\n  })\n}\n\n// Add a style name if there are shape layers selected\nconst addTextLayerWithoutColor = (textLayer) => {\n  iterateAlignments(textLayer)\n}\n\n// Add alignments to style names\nconst iterateAlignments = (textLayer, shapeLayer) => {\n  addStyleRefs(textLayer, shapeLayer, \"01 Left\")\n  addStyleRefs(textLayer, shapeLayer, \"02 Right\")\n  addStyleRefs(textLayer, shapeLayer, \"03 Center\")\n}\n\n// Replace strings with alignment and colours, and push to styleNames array\nconst addStyleRefs = (textLayer, shapeLayer, alignment) => {\n  let name = textLayer.name\n  name = name.includes(\"{align}\") ? name.replace(\"{align}\", alignment) : name + \"/\" + alignment\n  name = name.includes(\"{color}\") && shapeLayer ? name.replace(\"{color}\", shapeLayer.name)\n          : name.includes(\"{color}\") ? name.replace(\"{color}\", \"Default\")\n          : shapeLayer ? name + \"/\" + shapeLayer.name\n          : name\n  styleRefs.push({\n    textLayer: textLayer,\n    shapeLayer: shapeLayer,\n    name: name\n  })\n}\n\n// Iterate over the style names to start the style creation\nconst iterateStyleNames = () => {\n  styleRefs.forEach((obj) => {\n    createStyle(obj.name, obj.textLayer, obj.shapeLayer)\n  })\n}\n\n// Create the style from the references\nconst createStyle = (name, textRef, shapeRef) => {\n  \n  let newText = page.layers.filter((layer) => {\n    return layer.name == name\n  })[0]\n\n  if (newText) {\n    newText.style = textRef.style\n  } else {\n    newText = new SketchDOM.Text({\n      // parent: page,\n      // text: name,\n      name: name,\n      style: textRef.style,\n      // frame: {\n        // x: 0,\n        // y: page.layers.length > 0 ? page.layers[page.layers.length-1].frame.y + page.layers[page.layers.length-1].frame.height + 20 : 0\n      // }\n    })\n  }\n\n  if (name.includes(\"01 Left\")) {\n    newText.alignment = \"left\"\n  } else if (name.includes(\"02 Right\")) {\n    newText.alignment = \"right\"\n  } else if (name.includes(\"03 Center\")) {\n    newText.alignment = \"center\"\n  }\n\n  // let color = shapeRef && shapeRef.style.fills[0] ? shapeRef.style.fills[0].color\n  //             : textRef.style._object.primitiveTextStyle().attributes().MSAttributedStringColorAttribute\n  \n  // color = shapeRef ? hexToRgba(color) : MSColorStringToRgba(color)\n\n  let immutableColor = MSImmutableColor.colorWithSVGString_(shapeRef.style.fills[0].color);\n  let newColor = MSColor.alloc().initWithImmutableObject_(immutableColor);\n\n  newText.sketchObject.setTextColor(newColor)\n\n  let existing = existingStyles.filter((style) => {\n    return style.name == name\n  })[0]\n\n  if (existing) {\n    existing.style = newText.style\n  } else {\n    existing = SketchDOM.SharedStyle.fromStyle({\n      name: name,\n      style: newText.style,\n      document: doc\n    })\n  }\n\n}\n\n// Convert a hex value to RGBA\nconst hexToRgba = (hex) => {\n\tif (hex) {\n\t    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\t    return result ? {\n\t        r: parseInt(result[1], 16)/255,\n\t        g: parseInt(result[2], 16)/255,\n\t        b: parseInt(result[3], 16)/255,\n\t        a: parseInt(result[4], 16)/255\n\t    } : null;\n\t}\n}\n\n// Convert a hex value to RGBA\nconst MSColorStringToRgba = (msColor) => {\n\tif (msColor) {\n\t    return {\n\t        r: msColor.red(),\n\t        g: msColor.green(),\n\t        b: msColor.blue(),\n\t        a: msColor.alpha()\n\t    }\n\t}\n}","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");"],"sourceRoot":""}